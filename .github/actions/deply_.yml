name: Deploy Vue.js Frontend Service

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      systemctl_service_name: frontend   # Update the service name to match your frontend service
      message: |
        [${{ github.event.head_commit.committer.name }}](https://github.com/${{ github.event.head_commit.committer.username }}) pushed new commit: 
        `[ ${{ github.event.head_commit.message }} ]` 
        to [${{ github.event.repository.name }}](https://github.com/${{ github.event.repository.html_url }}) 

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Adjust this to the version of Node.js you're using for your Vue.js project

      - name: Install dependencies
        run: npm install

      - name: Build the Vue.js application
        run: npm run build  # Builds the application and places output in the dist/ folder

      - name: Stop Vue.js service
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: sudo systemctl stop ${{ env.systemctl_service_name }}  # Stop service if running on server
          host: ${{ secrets.SSH_HOST }}
          port: 22
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}

      - name: Copy build files to the server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: 22
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: dist/*  # The build output for Vue.js will typically be in the "dist" directory
          target: "/var/www/frontend"  # Target directory where your app will be served
          overwrite: true
          rm: false
          debug: true

      - name: Start Vue.js service
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: sudo systemctl start --no-block ${{ env.systemctl_service_name }}  # Restart the service
          host: ${{ secrets.SSH_HOST }}
          port: 22
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}

      - name: Send notification to Telegram
        uses: appleboy/telegram-action@master
        with:
          to: -4710185717  # Replace with the correct chat ID
          token: 6924975011:AAG2uOkV4Ah_4Zxqtccu9k6kRdFaULptHp8  # Replace with the correct Telegram bot token
          message: ${{ env.message }}
          format: markdown
          disable_web_page_preview: true
